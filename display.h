
//#ifndef IN_DISPLAY_C
/*
#define WSHIP_ROTATIONS 128
#define WSHIP_ROTATION_MASK 127
#define WSHIP_ROTATION_BITSHIFT 3
*/

#define CIRCLES 40
#define RLE_BCIRCLES 32
#define RLE_CCIRCLES 64
#define RLE_SCIRCLES 128
#define RLE_XCIRCLES 20

#define BMPS_VALUES 9
#define BMPS_TRANS_VALUES 17

#define TRANS_MODE drawing_mode(DRAW_MODE_TRANS, NULL, 0, 0);
#define END_TRANS drawing_mode(DRAW_MODE_SOLID, NULL, 0, 0);


/*

rotations must be power of 2, and maximum 1024

mask is rotations - 1

bitshift is the number of bitshifts needed to step down from 1024 to the rotations value

should be possible to change these three values for each rotation type without changing anything else.

*/

struct BMP_STRUCT
{
 BITMAP *sprite;
 int x [BMPS_VALUES];
 int y [BMPS_VALUES];
};

struct RLE_STRUCT
{
 RLE_SPRITE *sprite;
 int x;
 int y;
};


//#endif

void run_display(int draw_everything, int star_motion);
void run_underlay(void);
int evolve_screen(char reset);
void display_pause(int count);
void get_interlude_background(void);

enum
{
WSHIP_SPRITE_OLD2,
WSHIP_SPRITE_OLD3,
WSHIP_SPRITE_FRIEND3,
WSHIP_SPRITE_DROM,
WSHIP_SPRITE_LINER,
WSHIP_SPRITE_SCOUT2,
WSHIP_SPRITE_SCOUT3,
WSHIP_SPRITE_SCOUTCAR,
WSHIP_SPRITE_ECARRIER,
WSHIP_SPRITE_FREIGHT,
WSHIP_SPRITE_EBASE,
WSHIP_SPRITES
};

enum
{
TURRET_SPRITE_BASIC_1,
TURRET_SPRITE_BASIC_2,
TURRET_SPRITE_BASIC_3,
TURRET_SPRITE_BASIC_4,
TURRET_SPRITE_BASIC_5,
TURRET_SPRITE_HEAVY_1,
TURRET_SPRITE_HEAVY_2,
TURRET_SPRITE_HEAVY_3,
TURRET_SPRITE_HEAVY_4,
TURRET_SPRITE_HEAVY_5,
TURRET_SPRITE_EBASIC_1,
TURRET_SPRITE_EBASIC_2,
TURRET_SPRITE_EBASIC_3,
TURRET_SPRITE_EBASIC_4,
TURRET_SPRITE_EBASIC_5,
TURRET_SPRITE_EBASIC_6,
TURRET_SPRITE_EHEAVY_1,
TURRET_SPRITE_EHEAVY_2,
TURRET_SPRITE_EHEAVY_3,
TURRET_SPRITE_EHEAVY_4,
TURRET_SPRITE_ELONG_1,
TURRET_SPRITE_ELONG_2,
TURRET_SPRITE_ELONG_3,
TURRET_SPRITE_ELONG_4,
TURRET_SPRITE_EANTI_1,
TURRET_SPRITE_EANTI_2,
TURRET_SPRITE_EANTI_3,
TURRET_SPRITE_EANTI_4,
TURRET_SPRITE_EANTI_5,
TURRET_SPRITE_EBEAM_1,
TURRET_SPRITE_EBEAM_2,
TURRET_SPRITE_EBEAM_3,
TURRET_SPRITE_EBEAM_4,
TURRET_SPRITE_CGUN_1,
TURRET_SPRITE_CGUN_2,
TURRET_SPRITE_CGUN_3,
TURRET_SPRITE_CLAUNCHER_1,
// when adding an entry, delete s_turret.bmp so a new file will be generated!
TURRET_SPRITES
// all entries except the last must be valid (and have sprites)
};

enum
{
PLAYER_RLE_BASE_1,
PLAYER_RLE_BASE_2,
PLAYER_RLE_BASE_3,
PLAYER_RLE_SIDE_L1,
PLAYER_RLE_SIDE_L2,
PLAYER_RLE_SIDE_L3,
PLAYER_RLE_SIDE_R1,
PLAYER_RLE_SIDE_R2,
PLAYER_RLE_SIDE_R3,
PLAYER_RLE_FRONT_1,
PLAYER_RLE_FRONT_2,
PLAYER_RLE_FRONT_3,
PLAYER_RLE_FRONT_4,
PLAYER_RLE_BIG,
PLAYER_RLE_WEAPON1,
PLAYER_RLE_WEAPON2,
PLAYER_RLE_WEAPON3,
PLAYER_RLE_WEAPON4,
PLAYER_RLE_WEAPON5,
PLAYER_RLE_WEAPON6,
PLAYER_RLE_MINI,
PLAYER_RLE_MENU1,
PLAYER_RLE_MENU2,
PLAYER_RLE_MENU3,
PLAYER_RLE_MENU4,
PLAYER_RLE_MENU5,
PLAYER_RLE_MENU6,
PLAYER_RLES

};

enum
{
MISSILE_SPRITE_PTORP1,
MISSILE_SPRITE_AF,
MISSILE_SPRITES
};

#define SHIELD_RLES 10



// the number of different colours that damage indicators need to be
#define DAMAGE_COLS 7
enum
{
DSPRITE_WSHIP_OLD2_1,
DSPRITE_WSHIP_OLD2_2,
DSPRITE_WSHIP_OLD2_3,
DSPRITE_WSHIP_OLD2_4,
DSPRITE_WSHIP_OLD3_1,
DSPRITE_WSHIP_OLD3_2,
DSPRITE_WSHIP_OLD3_3,
DSPRITE_WSHIP_OLD3_4,
DSPRITE_WSHIP_OLD3_5,
DSPRITE_WSHIP_DROM_1,
DSPRITE_WSHIP_DROM_2,
DSPRITE_WSHIP_DROM_3,
DSPRITE_WSHIP_LINER_1,
DSPRITE_WSHIP_LINER_2,
DSPRITE_WSHIP_LINER_3,
DSPRITE_WSHIP_FRIEND3_1,
DSPRITE_WSHIP_FRIEND3_2,
DSPRITE_WSHIP_FRIEND3_3,
DSPRITE_WSHIP_FRIEND3_4,
DSPRITE_WSHIP_FRIEND3_5,
DSPRITE_FIGHTER_1,
DSPRITE_BOMBER_1,
DSPRITE_WSHIP_SCOUT2_1,
DSPRITE_WSHIP_SCOUT2_2,
DSPRITE_WSHIP_SCOUT2_3,
DSPRITE_WSHIP_SCOUT2_4,
DSPRITE_WSHIP_SCOUT3_1,
DSPRITE_WSHIP_SCOUT3_2,
DSPRITE_WSHIP_SCOUT3_3,
DSPRITE_WSHIP_SCOUT3_4,
DSPRITE_WSHIP_SCOUT3_5,
DSPRITE_FRIEND_1,
DSPRITE_ESCOUT_1,
DSPRITE_FSTRIKE_1,
DSPRITE_IBEX_1,
DSPRITE_AUROCHS_1,
DSPRITE_LACEWING_1,
DSPRITE_LACEWING_2,
DSPRITE_LACEWING_3,
DSPRITE_MONARCH_1,
DSPRITE_WSHIP_SCOUTCAR_1,
DSPRITE_WSHIP_SCOUTCAR_2,
DSPRITE_WSHIP_SCOUTCAR_3,
DSPRITE_WSHIP_SCOUTCAR_4,
DSPRITE_WSHIP_ECARRIER_1,
DSPRITE_WSHIP_ECARRIER_2,
DSPRITE_WSHIP_ECARRIER_3,
DSPRITE_WSHIP_ECARRIER_4,
DSPRITE_WSHIP_FREIGHT_1,
DSPRITE_WSHIP_FREIGHT_2,
DSPRITE_WSHIP_FREIGHT_3,
DSPRITE_WSHIP_FREIGHT_4,
DSPRITE_WSHIP_EBASE_1,
DSPRITE_WSHIP_EBASE_2,
DSPRITE_WSHIP_EBASE_3,
DSPRITE_WSHIP_EBASE_4,
DSPRITE_WSHIP_EBASE_5,
DSPRITE_WSHIP_EBASE_6,
DSPRITE_EINT_1,
NO_DSPRITES
};


enum
{
SHIELD_WSHIP,
SHIELD_FIGHTER,
SHIELD_TYPES
};
